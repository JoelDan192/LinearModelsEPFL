source('C:/Users/Joel/LinearModelsEPFL/codePractical1.R')
pwd
cwd()
load('cars.RData')
load('cars.RData')
source('C:/Users/Joel/LinearModelsEPFL/codePractical1.R')
load("C:/Users/Joel/LinearModelsEPFL/cars.rdata")
load('cars.RData')
hundredOverMPG <- rep(100,82) / cars$CityMPG
hundredOverMPG
weights <- cars$Weight
HPOverWeight <- cars$Horsepower / cars$Weight
plot(weights, hundredOverMPG, xlab='Weights', ylab='Gallons per hundred city miles')
plot(HPOverWeight, hundredOverMPG, xlab='HorsePowerPerWeight', ylab='Gallons per hundred city miles')
pdf(file="RvsWeights.pdf", width = 5, height = 4)
pdf(file="RvsWeights.pdf", width = 5, height = 4)
pdf(file="C:/Users/Joel/LinearModelsEPFL/RvsWeights.pdf", width = 5, height = 4)
dev.off()
plot(weights, hundredOverMPG, xlab='Weights', ylab='Gallons per hundred city miles')
plot(weights, hundredOverMPG, xlab='Weights', ylab='Gallons per hundred city miles')
source('C:/Users/Joel/LinearModelsEPFL/codePractical1.R')
load('cars.RData')
setwd("C://Us")
setwd("C://Users/Joel/LinearModelsEPFL/")
load('cars.RData')
require(car)
library(xtable)
hundredOverMPG <- rep(100,82) / cars$CityMPG
weights <- cars$Weight
HPOverWeight <- cars$Horsepower / cars$Weight
newData <- cars[ ,11:26]
FullFit <- lm(hundredOverMPG ~ ., data = newData)
summary(FullFit)
library(car)
vif(FullFit)
print(xtable(summary(FullFit)))
print(xtable(vif(FullFit)))
x = xtable(vif(FullFit), align=rep("",ncol(vif(FullFit))+1))
f1 <- lm(hundredOverMPG ~ ., data = newData)
f1.backward <- step(f1, direction = "backward")
summary(f1.backward)
vif(f1.backward)
f2 <- lm(hundredOverMPG ~ 1, data = newData)
my.scope <- formula(data.frame(hundredOverMPG, newData))
f2.forward <- step(f2, scope = my.scope, direction = "forward", data = newData)
summary(f2.forward)
vif(f2.forward)
vif(f1.backward)
summary(f1.backward)
f3 <- lm(hundredOverMPG ~ ., data = newData) # Fitting model using all the covariates
f3.backward <- step(f3, direction = "backward", k=log(nrow(newData)))
summary(f3.backward)
vif(f3.backward)
f4 <- lm(hundredOverMPG ~ 1, data = newData) # Fitting the model with only one varialbe, the 1 column
my.scope <- formula(data.frame(hundredOverMPG, newData))
f4.forward <- step(f4, scope = my.scope, direction = "forward", data = newData, k=log(nrow(newData)))
summary(f4.forward)
vif(f4.forward)
clear
clean
pairs(~Weight+FuelCapacity+Length+Wheelbase+Width+Uturn, data=cars)
newData2 = cars[,-c(1,2,3,4,5,6,7,8,9,10,17,19,20,21,22)]
newFit <- lm(hundredOverMPG ~ ., data = newData2)
summary(newFit)
library(car)
vif(newFit)
print(xtable(newFit))
f1 <- lm(hundredOverMPG ~ ., data = newData2)
f1.backward <- step(f1, direction = "backward")
summary(f1.backward)
vif(f1.backward)
f2 <- lm(hundredOverMPG ~ 1, data = newData2)
my.scope <- formula(data.frame(hundredOverMPG, newData2))
f2.forward <- step(f2, scope = my.scope, direction = "forward", data = newData2)
summary(f2.forward)
vif(f2.forward)
f3 <- lm(hundredOverMPG ~ ., data = newData2) # Fitting model using all the covariates
f3.backward <- step(f3, direction = "backward", k=log(nrow(newData2)))
summary(f3.backward)
vif(f3.backward)
# BIC, Forward
f4 <- lm(hundredOverMPG ~ 1, data = newData2) # Fitting the model with only one varialbe, the 1 column
my.scope <- formula(data.frame(hundredOverMPG, newData2))
f4.forward <- step(f4, scope = my.scope, direction = "forward", data = newData2, k=log(nrow(newData2)))
summary(f4.forward)
vif(f4.forward)
